generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String?   @unique
  bio            String?
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
  places         Place[]
  eventIDs       String[]   @db.ObjectId
  events         Event[] @relation(fields: [eventIDs], references: [id])  
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Place {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  image          String
  bgImage        String
  events         Event[]
  ownerId        String @db.ObjectId
  owner          User   @relation( fields: [ownerId], references: [id])
}

model Event {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  limit          Int
  description    String
  image          String
  placeId        String @db.ObjectId
  place          Place   @relation(fields: [placeId], references: [id])
  participantIDs String[]   @db.ObjectId
  participants  User[] @relation(fields: [participantIDs], references: [id])     
}



